---
import { t } from "i18next";

const recaptchaSiteKey = import.meta.env.PUBLIC_G_RECAPTCHA_SITE_KEY;
---

<!-- Waiting list modal -->
<div
  class="modal fade"
  id="waiting-list-modal"
  tabindex="-1"
  aria-labelledby="waiting-list-modal-label"
  aria-hidden="true"
  data-bs-theme="dark"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="waiting-list-modal-label">
          {t("common.join-waiting-list")}
        </h1>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"></button>
      </div>
      <form id="waiting-list-form">
        <div class="modal-body">
          <div class="mb-3">
            <label for="name" class="form-label"
              >{t("contact-us.form.name")}</label
            >
            <input
              type="text"
              class="form-control"
              name="name"
              placeholder={t("contact-us.form.name")}
              data-bs-theme="light"
              required
            />
          </div>
          <div class="mb-3">
            <label for="lastname" class="form-label"
              >{t("contact-us.form.last-name")}</label
            >
            <input
              type="text"
              class="form-control"
              name="lastname"
              placeholder={t("contact-us.form.last-name")}
              data-bs-theme="light"
              required
            />
          </div>
          <div class="mb-3">
            <label for="email" class="form-label"
              >{t("contact-us.form.email")}</label
            >
            <input
              type="email"
              class="form-control"
              name="email"
              placeholder={t("contact-us.form.email")}
              data-bs-theme="light"
              required
            />
          </div>

          <div class="g-recaptcha" data-sitekey={recaptchaSiteKey}></div>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal">{t("common.close")}</button
          >
          <button
            class="btn btn-primary"
            type="submit"
            id="waiting-list-form-button">{t("common.submit")}</button
          >
        </div>
      </form>
    </div>
  </div>
</div>

<style>
  .g-recaptcha {
    margin: 2rem 0;
  }
</style>

<script>
  import { t } from "i18next";
  import Swal from "sweetalert2";

  const form = document.getElementById("waiting-list-form") as HTMLFormElement;
  const btn = document.getElementById(
    "waiting-list-form-button"
  ) as HTMLButtonElement;
  console.log(form, btn);
  if (form && btn) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      console.log("submitting");
      btn.disabled = true;

      // @ts-ignore
      const recaptchaResponse = grecaptcha.getResponse(2);
      if (!recaptchaResponse) {
        Swal.fire(t("contact-us.form.no-recaptcha-message") || "", "", "error");
        btn.disabled = false;
        return;
      }

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      const email = data.email as string;
      const name = data.name as string;
      const lastname = data.lastname as string;

      try {
        await fetchWaitingList({ email, name, lastname }, recaptchaResponse);
      } catch (error) {
        Swal.fire({
          title: t("common.error") || "Error!",
          text:
            t("contact-us.form.error-message") ||
            "Something went wrong. Please try again later.",
          icon: "error",
          confirmButtonText: t("common.ok") || "OK",
          confirmButtonColor: "#d9b812",
        });
        btn.disabled = false;
      }
    });
  }

  const fetchWaitingList = async (
    formdata: { email: string; name: string; lastname: string },
    recaptchaResponse: string
  ) => {
    const res = await fetch(
      "https://cms.manhattanmanor.com/forms/src/addToWaitingList.php",
      {
        method: "POST",
        body: JSON.stringify({ ...formdata, g_captcha: recaptchaResponse }),
      }
    );
    if (res.status !== 200)
      throw new Error(
        t("contact-us.form.error-message") ||
          "Something went wrong. Please try again later."
      );
    const data = await res.json();
    if (!data.error) {
      Swal.fire({
        title: t("common.success") || "Success!",
        text:
          t("waiting-list-form.successs-message") ||
          "Thank you for joining our waiting list. We will contact you if tickets become available.",
        confirmButtonText: t("common.ok") || "OK",
        confirmButtonColor: "#d9b812",
      });
      form.reset();
      // @ts-ignore
      grecaptcha.reset();
      btn.disabled = false;
      return;
    }

    throw new Error(
      t("contact-us.form.error-message") ||
        "Something went wrong. Please try again later."
    );
  };
</script>
